{"ts":1393076340872,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var pg = require('pg');\nvar sys = require(\"sys\");\nvar config = require(\"../conf/common_config\");\n\n// ModelBase: Modelのベースクラス\nvar Database = function () {};\n\n// データベースの認証情報を格納する\nDatabase.prototype.dbAuth = config.connectionString;\n\n// MySQLクライアントオブジェクトを作成する\n// （コメントアウト）セッションを使いまわそうと思ったが、\n// 一度index.jsで振られると、中途半端にセッションが切れてるせいでエラーになるらしい。\nDatabase.prototype._getClient = function () {\n    //  if (this.client === undefined) {\n    this.client = new pg.Client(this.dbAuth);\n    //  }\n    return this.client;\n};\n\n// クエリを実行する\nDatabase.prototype.query = function (query, params) {\n    var client = this._getClient();\n    client.connect();\n    return client.query(query, params);\n};\n\n// Databaseクラスのインスタンスを作成する\nfunction createClient() {\n    return new Database();\n}\n\nexports.createClient = createClient;\n\n// データベースエラーメッセージの変換\nexports.getErrorMsg = function(error){\n    return sys.inspect(error);\n};\n"]],"start1":0,"start2":0,"length1":0,"length2":891}]],"length":891}
