{"ts":1393658733034,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/*\n * 商品マスタから商品情報を取得する\n */\n \nvar database = require(\"../dao/database\");\nvar client = database.createClient();\n//var log = require(\"../util/logger\");\n//var logger = log.createLogger();\nvar async = require('async');\n\n/* 檀家追加画面メイン（post処理） */\n/* **今は使えていないが、いずれはasyncをつかった方式を実装したい** */\n/*\nexports.main = function(callback){\n    // いったんはpostで入ってきたデータは正しい想定で作る\n    \n    var itemListInfo = [];\n\n    async.series([\n\n        // 商品マスタから僧のリストを取得\n        function (dbcallback) {\n            getItemList(itemListInfo, dbcallback);\n                             console.log('aaaaaaaaa');\n        }],\n        // 【END】トランザクション完了(commit or rollback)\n        function (err, results) {\n            if (err) {\n                callback(true);\n                return;\n            }\n            callback(false, itemListInfo);\n            return;\n        }\n    );\n};\n*/\n\n/* 檀家追加画面でtiku&sewaninボックスの表示の利用（get処理） */\nexports.getItemList = function(keyword,callback){\n  \n  var query = client.query('SELECT item_id, create_user, create_date, update_user, update_date, is_disabled,is_disabled, item_no, item_name, item_description, item_tag FROM m_item where is_disabled = FALSE and is_disabled = FALSE and item_tag like $1',[keyword]);\n  \n  \n  var rows = [];\n  query.on('row', function(row) {\n           rows.push(row);\n           });\n  \n  query.on('end', function(row,err) {\n           callback(rows);\n           return;\n           });\n};\n\n"]],"start1":0,"start2":0,"length1":0,"length2":1411}]],"length":1411}
